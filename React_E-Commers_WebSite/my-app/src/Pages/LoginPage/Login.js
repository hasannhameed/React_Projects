import React, { useState, useEffect, useCallback } from 'react';
import LoginList from './LoginList';
import AddLogin from './AddLogin';
import './Login.css'; // Assuming Login.css is where you store your CSS
import { Link } from 'react-router-dom';

function Login() {
  const [logins, setLogins] = useState([]);
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState(null);
  const [successMessage, setSuccessMessage] = useState('');

  const fetchLoginsHandler = useCallback(async () => {
    setIsLoading(true);
    setError(null);
    try {
      const response = await fetch('https://react-d64f8-default-rtdb.firebaseio.com/logins.json');
      if (!response.ok) {
        throw new Error('Something went wrong!');
      }

      const data = await response.json();
      const loadedLogins = [];

      for (const key in data) {
        loadedLogins.push({
          id: key,
          name: data[key].name,
          email: data[key].email,
          password: data[key].password,
        });
      }

      setLogins(loadedLogins);
    } catch (error) {
      setError(error.message);
    }
    setIsLoading(false);
  }, []);

  useEffect(() => {
    fetchLoginsHandler();
  }, [fetchLoginsHandler]);

  async function addLoginHandler(login) {
    try {
      const response = await fetch('https://react-d64f8-default-rtdb.firebaseio.com/logins.json', {
        method: 'POST',
        body: JSON.stringify(login),
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (!response.ok) {
        throw new Error('Failed to add login.');
      }

      const data = await response.json();
      const newLogin = { id: data.name, ...login }; // `data.name` is the new key generated by Firebase
      setLogins((prevLogins) => [...prevLogins, newLogin]);

      // Display success message

      setSuccessMessage('Successfully logged in!');
      
      // Clear success message after 3 seconds
      setTimeout(() => {
        setSuccessMessage('');
      }, 2000);
    } catch (error) {
      setError(error.message);
    }
  }

  let content = <p>Found no logins.</p>;

  if (logins.length > 0) {
    content = <LoginList logins={logins} />;
  }

  if (error) {
    content = <p>{error}</p>;
  }

  if (isLoading) {
    content = <p>Loading...</p>;
  }

  return (
    <React.Fragment>
      
      {successMessage && <p className="success-message">{successMessage}</p>}
      <div className='complain'>
      <h6>Have any issue?  write us</h6>
      <h5> <Link to='/Report'>Click here</Link></h5>
     
    </div>
      <section>
        <AddLogin onAddLogin={addLoginHandler} />
      </section>
       {/* <section>
        <button onLost={fetchLoginsHandler}>Fetch Logins</button>
      </section> */}
      {content}
    </React.Fragment>
  );
}

export default Login;
